version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7
    container_name: quizcraft-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: quizcraft2024
      MONGO_INITDB_DATABASE: quizcraft
    volumes:
      - mongodb_data:/data/db
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - quizcraft-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: quizcraft-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://quizcraft_user:quizcraft_pass@mongodb:27017/quizcraft
      JWT_SECRET: your_super_secret_jwt_key_change_this_in_production
      JWT_EXPIRE: 7d
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      GEMINI_MODEL: gemini-1.5-pro
      EMBEDDING_MODEL: gemini-embedding-001
      VECTOR_INDEX_NAME: quizembeddings_vector_index
      UPLOAD_PATH: ./uploads
      MAX_FILE_SIZE: 10485760
      RATE_LIMIT_WINDOW_MS: 900000
      RATE_LIMIT_MAX_REQUESTS: 100
      FREE_QUIZ_LIMIT: 10
      PREMIUM_QUIZ_LIMIT: 1000
      ADMIN_EMAIL: admin@quizcraft.com
      ADMIN_PASSWORD: ${ADMIN_PASSWORD:-ChangeThisPassword!}
    depends_on:
      - mongodb
    volumes:
      - backend_uploads:/app/uploads
    networks:
      - quizcraft-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1); })"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Web App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: quizcraft-frontend
    restart: unless-stopped
    ports:
      - "19006:19006"
    environment:
      EXPO_DEVTOOLS_LISTEN_ADDRESS: 0.0.0.0
      REACT_NATIVE_PACKAGER_HOSTNAME: 0.0.0.0
    depends_on:
      - backend
    networks:
      - quizcraft-network
    volumes:
      - /app/node_modules
    stdin_open: true
    tty: true

  # Database Initialization (runs once)
  db-setup:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: quizcraft-db-setup
    environment:
      NODE_ENV: production
      MONGODB_URI: mongodb://quizcraft_user:quizcraft_pass@mongodb:27017/quizcraft
      ADMIN_EMAIL: admin@quizcraft.com
      ADMIN_PASSWORD: ${ADMIN_PASSWORD:-ChangeThisPassword!}
    depends_on:
      - mongodb
    networks:
      - quizcraft-network
    command: >
      sh -c "
        echo 'Waiting for MongoDB to be ready...' &&
        sleep 10 &&
        echo 'Setting up database...' &&
        npm run setup &&
        echo 'Database setup complete!'
      "
    restart: "no"

networks:
  quizcraft-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
  backend_uploads:
    driver: local